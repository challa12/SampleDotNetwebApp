# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
- stage: "buildstage"
  jobs:
  - job: "buildjob"
    pool:
     vmImage: ubuntu-latest
    variables:
     BuildConfiguration: Release
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactStagingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(build.artifactStagingDirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'

- stage: "devlopmentdeploy" 
  dependsOn: buildstage
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  jobs:
  - deployment:
    pool:
     vmImage: 'ubuntu-latest'
    environment: Development
    strategy:
      runOnce:
       deploy:
        steps:
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'azuresrconnection'
            appType: 'webApp'
            WebAppName: 'dev-app-demo'
            packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

- stage: "QAdeploy" 
  dependsOn: "devlopmentdeploy"
  jobs:
  - deployment:
    pool:
     vmImage: 'ubuntu-latest'
    environment: QA
    strategy:
      runOnce:
       deploy:
        steps:
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'azuresrconnection'
            appType: 'webApp'
            WebAppName: 'QA-app-demo'
            packageForLinux: '$(Pipeline.Workspace)/**/*.zip'          

- stage: "Proddeploy" 
  dependsOn: "QAdeploy"
  jobs:
  - deployment:
    pool:
     vmImage: 'ubuntu-latest'
    environment: Production
    strategy:
      runOnce:
       deploy:
        steps:
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'azuresrconnection'
            appType: 'webApp'
            WebAppName: 'Prod-app-demo'
            deployToSlotOrASE: true
            ResourceGroupName: 'demoassignment'
            SlotName: 'staging'
            packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
        - task: AzureAppServiceManage@0
          inputs:
            azureSubscription: 'azuresrconnection'
            Action: 'Swap Slots'
            WebAppName: 'Prod-app-demo'
            ResourceGroupName: 'demoassignment'
            SourceSlot: 'staging'